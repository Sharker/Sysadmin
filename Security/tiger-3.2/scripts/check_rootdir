#!/bin/sh
#
#     tiger - A UN*X security checking system
#     Copyright (C) 1993 Douglas Lee Schales, David K. Hess, David R. Safford
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#     Please see the file `COPYING' for the complete copyright notice.
#
# check_rootdir - 11/10/2001
#
# check_rootdir - 07/25/2002 - jfs
#       Changed TigerInstallDir to .
#
#-----------------------------------------------------------------------------
#
TigerInstallDir='.'

#
# Set default base directory.
# Order or preference:
#      -B option
#      TIGERHOMEDIR environment variable
#      TigerInstallDir installed location
#
basedir=${TIGERHOMEDIR:=$TigerInstallDir}

for parm
do
   case $parm in
   -B) basedir=$2; break;;
   esac
done

#
# Verify that a config file exists there, and if it does
# source it.
#
[ ! -r $basedir/config ] && {
  echo "--ERROR-- [init002e] No 'config' file in \`$basedir'."
  exit 1
}

. $basedir/config

. $BASEDIR/initdefs

#
# If run in test mode (-t) this will verify that all required
# elements are set.
#
[ "$Tiger_TESTMODE" = 'Y' ] && {
  haveallcmds CAT SORT AWK LS RM || exit 1
  haveallfiles BASEDIR WORKDIR || exit 1
  haveallvars TESTLINK HOSTNAME || exit 1
  
  echo "--CONFIG-- [init003c] $0: Configuration ok..."
  exit 0
}

#------------------------------------------------------------------------

echo
echo "# Performing check of root directory..."

haveallcmds CAT SORT AWK LS RM || exit 1
haveallfiles BASEDIR WORKDIR || exit 1
haveallvars TESTLINK HOSTNAME || exit 1

# Checking to see if the root directory is on the correct INODE number
inode=`$LS -di / | $AWK '{print $1}'`
[ $inode != 2 ] && 
   message FAIL rootdir001f "" "Root directory on incorrect inode"


# Checking the permissions on the root directory is standard

[ -d / ] && {
  getpermit / |
  while read file owner group ur uw ux gr gw gx or ow ox suid sgid sticky
  do
    [ "${gw}${ow}" != '00' ] && {
	str="The root directory / has"
	case "$gw$ow" in
	   01) str="$str world write"
	       mode='o-w';;
	   10) str="$str group \`$group' write"
	       mode='g-w';;
	   11) str="$str group \`$group' and world write"
	       mode='go-w';;
	esac
        echo FAIL "" "${str} access."
        message FAIL rootdir002f "" "${str} access."
     }
  done
}
