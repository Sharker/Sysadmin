.\" @(#)tiger.8 1.00 93/06/04 TAMUSCC;
.TH TIGER 8 "27 March 2002" "Security" "Administrator Commands"
.SH NAME
tiger \- UNIX Security Checker
.SH SYNONPSIS
.B "tiger [-B tigerdir] [-l logdir] [-w workdir] [-b bindir] [-e|-E] [-S] [-H] [-c tigerrc]"
.LP
.SH DESCRIPTION
.LP
Tiger is a package consisting of Bourne Shell scripts, C code and
data files which is used for checking for security problems on a
UNIX system.  It scans system configuration files, file systems,
and user configuration files for possible security problems and
reports them.  The command
.B tigexp(8)
can be used to obtain explanations of the problems reported by
.I tiger.
.SS OPTIONS
.TP
.I "\-B"
Specify the directory where
.I tiger
is installed.  If not specified, the current directory is used.
.TP
.I "\-d"
Specify the name of the directory where
.I tiger
will write the security report.  This defaults to the current directory.
The filename of the report will
be of the form 
.RI 'security.report. hostname.date.time.'
.TP
.I "\-w"
Specify a directory to use for creating scratch files.  This defaults
to
.I /tmp.
.TP
.I "\-b"
Specify the directory which contains (or will contain) the binaries
generated from the C modules.  If the systems directories contain
all the binaries, they will be used directly from there.  If not,
then if the
.I bindir
contains the binaries, these will be used.  If none are found in
either place, then an attempt will be made to compile the C code
and install the executables into the
.I bindir.
.TP
.I "\-c"
Specify an alternate name for the
.I tigerrc
control file.  The default is 'tigerrc'.
.TP
.I "\-e"
This option will cause explanations to be inserted into the security
report following each message.  This can greatly increase the size
of the report, as explanations may appear repeatedly.
.TP
.I "\-E"
This option indicates that a separate explanation report should be
created, with explanations for each type of message only appearing
once.  The filename of the explanation report will be of the form
.RI 'explain.report. hostname.date.time.'
.TP
.I "\-H"
This option will format the report into HTML creating local links
to the problem descriptions.
.TP
.I "\-S"
This option indicates that a surface level check of the configuration
files of any diskless clients served by this machine should be checked
at the same time.  The checks will not be as in depth as they would be
if run on the client itself.
.LP
.SH MODULES
.LP
.B Tiger
is composed of a series of modules. Each of these modules check specific
security issues related to UNIX systems. The framework provided by 
.B Tiger
allows the provision of both generic modules and those specific for
the operating system the software runs in. Modules can be executed
stand alone, from cron or through the
.B tiger
program (which will execute all those available).
.TP
.I check_accounts
Checks the accounts provided in the system, looking for disabled accounts
with cron, rhosts, .forward, and valid shells.
.TP
.I check_aliases
Performs a check for mail aliases and improper configuration.
.TP
.I check_anonftp
Determines if the anonymous FTP service is properly configured.
.TP
.I check_cron
Validates the cron entries in the system.
.TP
.I check_embedded
Determines if embedded pathnames are configured properly.
.TP
.I check_exports
Analyses configuration files for NFS exported filesystems to see if 
access is properly restricted.
.TP
.I check_group
Checks the UNIX groups available in the system, looking for conflicts
and improper entries.
.TP
.I check_inetd
Checks the inetd configuration file: compares against services 
definition, valid directory paths, non-existant binaries and active
services.
.TP
.I check_known
Looks for known intrusion signs including backdors and mail spools.
.TP
.I check_netrc
Checks if users's netrc files are insecurely configured.
.TP
.I check_nisplus
Looks for wrong configuration in the NIS+ entries.
.TP
.I check_passwd
Checks the UNIX users available in the system, looking for conflicts
and improper entries.
.TP
.I check_path
Validates the binaries in user's PATHs as well as PATH definitions
used by scripts in order to determine insecure definitions.
.TP
.I check_perms
Check filepermissions and inconsistencies.
.TP
.I check_printcap
Analyses the configuration for the printer control file.
.TP
.I check_rhosts
Checks rhosts files in order to see if user's configuration leaves the
system open to attack.
.TP
.I check_sendmail
Checks sendmail configuration files.
.I check_signatures
Compares binary files signatures against those stored in the local database
(provided with the program).
.TP
.I check_system
This module calls the operating system's specific modules available at
.B /usr/lib/tiger/systems/
.
.TP
.I check_devices
Checks for devices's permissions, warning about devices that have world
permissions.
.TP
.I check_logfiles
Checks for the existance of log files (wtmp, btmp, lastlog and utmp). It
will also check for proper umask settings.
.TP
.I check_listeningprocs
Checks for processes listening on TCP/IP sockets (servers) in the system as 
well as users running them. Will warn if the user running a server is not 
an authorised one or if the server is listening on all available interfaces.
.TP
.I check_patches
Checks if patches are available for the system (i.e. new packages).
It will use autorpm or apt-get to check this (so this tools need to be
properly configured). This check is specific to Linux (RedHat or Debian).
.TP
.I check_root
Checks if remote root login is allowed to the local system.
.TP
.I check_rootdir
Checks the permissions for the root directory.
.TP
.I check_single
Checks if the system is properly configured to disallow single-user
access. This check is specific to Linux.
.TP
.I check_lilo
Analyses configuration files for lilo and grub boot loaders (Linux-specific).
.TP
.I check_release
Analyses the verions of the operating system and determines if it is
too out of date. This check is specific to Linux (RedHat or Debian).
.TP
.I deb_checkadvisories
This module checks against a list of stored Debian Security
Advisories in order to see if the system has any package installed
whose version might be subject to any security vulnerability (Debian-specific).
.TP
.I deb_checkmd5sums
Compares the MD5 sums of binary files against those provided after installation.
Changes in these files might be an indication of a compromised system
(Debian-specific).
.TP
.I deb_nopackfiles
Looks for files installed in the system's directories that are not provided
by any installed Debian packages (Debian-specific).
.LP
.SH SEE ALSO
tigexp(8)
.LP
.SH BUGS
There are a lot more things to check.
.LP
Some places in the package are not shell meta-character or white-space
safe.
.LP
For Debian-specific (known) bugs read the 
.B /usr/share/doc/tiger/README.Debian
document or the
.B http://bugs.debian.org/tiger
webpage.
.SH AUTHOR
.B Tiger
was originally developed by a team of the 
Texas A&M University Supercomputer Center, as of september 1993, 
the development done via the Network Group, Computing & Information Services.
.PP
This software was written originally by Douglas Lee Schales, Dave K. Hess, Khalid Warraich,
and Dave R. Safford (circa 1993)
.PP
A
.B lot
of changes were introduced by the ARSC team (a.k.a. the TARA team)
Liam Forbes <lforbes at arsc.edu>, Nathan Bills <bills@arsc.edu> and
Mike Kienenberger <mkienenb at arsc.edu>, including support for quite a number of
operating systems.
.PP
The adaptation for the GNU/Linux operating system was made by
Robert L. Ziegler <rlz at mediaone.net>
.PP
The modifications for the Debian GNU/Linux operating system have been made 
by Javier Fernandez-Sanguino Peña <jfs at computer.org>, including a new check for the GNU/Linux
operating systems (
.B gen_listeningprocs
) and some specific for Debian (
.B deb_checkadvisories
,
.B deb_checkmd5sums
and
.B deb_nopackfiles
).
